name: "Cloud infrastructure and application build, deploy pipeline"

on:
  workflow_dispatch:

  # push:
  #   branches: [ "main" ]
  # pull_request:
permissions:
  contents: read
  pull-requests: write

jobs:
  deploy-infrastructure:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the code repository
      - name: Checkout
        uses: actions/checkout@v3

      # Install TF CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          terraform_wrapper: false

      # Initialize
      - name: Terraform Init
        id: init
        run: terraform init
        env:
          TF_ACTION_WORKING_DIR: "terraform"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

      # Generate an execution plan for Terraform
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -no-color -out tf.plan
        env:
          TF_ACTION_WORKING_DIR: "terraform"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Apply execution plan
      - name: Terraform Apply
        if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false tf.plan
        env:
          TF_ACTION_WORKING_DIR: "terraform"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
